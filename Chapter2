在HTML中使用JavaScript

<script>元素
<script>的五个属性：（HTML5规范下）
async:可选。表示应该立即下载脚本，但不应妨碍页面中的其他操作，比如下载其他资源或等待加载其他脚本。（仅适用于外部脚本）。
charset:可选。表示通过src属性指定的代码的字符集（字符编码）。由于大多数浏览器会忽略它的值，因此这个属性很少有人用。（仅适用于外部脚本）。
defer:可选。表示脚本可以延迟到文档完全被解析和显示之后再执行。（仅适用于外部脚本）。
src:可选。表示包含要执行代码的外部文件。规定外部脚本的 URL。
type:可选。表示编写代码使用的脚本语言的内容类型。默认值为text/javascript。

使用<script>元素的方式有两种，直接在页面中嵌入JavaScript代码和包含外部JavaScript文件。
1、在使用嵌入JavaScript代码时，只须为<script>指定type属性:<script type=“text/javascript”></script>
虽然现在已被告知可不再写 type=“text/javascript” 属性，因为现在即使不指定这个属性，其默认值仍为 “text/javascirpt” 。
但建议还是要习惯性加上，写上可以明确指示浏览器按照何种脚本以及何种版本加载和解析脚本，可以有效避免兼容性或者版本差异造成的错误。
2、包含外部文件：<script type=“text/javascript” src="example.js"></script>。两个标签之间不应有代码，有也不会执行。
这时，属性src就是必须的，它的属性值是一个指向外部JavaScript文件的链接。这个文件只需包含放在开始的<script>和结束的</script>标签之间的JavaScript代码即可。
在解析外部JavaScript文件（包括下载该文件）时，页面的处理也会暂时停止。
src属性还可以包含来自外部域的JavaScript文件,(不过这种方法要小心，因为这个文件可能会被恶意的程序员修改。）
例如它可以指向当前HTML页面所在域之外的某个域中的URL:<script type=“text/javascript” src="http://www.somewhere.com/example.js"></script>
（域不好理解的话，就替换成服务器也行。）


标签的位置
按照惯例，所有<script>元素都应该放在页面的<head>元素中。这种做法的目的是把所有外部文件（包括CSS文件和JavaScript文件）的引用都放在相同的地方。
可是，在文档的<head>元素中包含所有JavaScript文件，意味着必须等到全部JavaScript代码都被下载、解析和执行完成以后才能开始呈现页面的内容。
（浏览器在遇到<body>标签时，才开始呈现内容。）
对于那些需要很多JavaScript代码的页面来说，这无疑会导致浏览器在呈现页面时出现明显的延迟，而延迟期间的浏览器窗口中将是一片空白。
为了避免这个问题，现代Web应用程序一般都把全部JavaScript引用放在<body>元素中页面的内容后面。
<body>
  <!--这里放内容-->
  <script type=“text/javascript” src="example.js"></script>
</body>
这样，在解析JavaScript代码之前，页面的内容将完全呈现在浏览器中。而用户也会因为浏览器窗口显示空白页面的时间缩短而感到打开页面的速度加快了。



延迟脚本
<script>元素有属性defer，这个属性的用途是表明脚本在执行时不会影响页面的构造。也就是说，脚本会被延迟到整个页面都解析完毕后再运行。
因此，在<script>元素中设置defer属性，相当于告诉浏览器立即下载，但延迟执行。（defer="defer")
记住，defer属性只适用于外部脚本文件（HTML5中明确规定)。嵌入式的<script>即使设置了defer属性，延迟功能也会被会忽略。


异步脚本（具体内容上网再查找看看）
HTML5为<script>元素有async属性。这个属性与defer不同的是，标记为async的脚本并不保证按照指定它们的先后顺序执行。（async属性不需要值，写上async就行。）



在XHTML中的用法（在15页，暂不记录。）
可扩展超文本标记语言，即XHTML(Extensible HyperText Markup Language），是将HTML作为XML的应用而重新定义的一个标准。
编写XHTML代码的规则要比编写HTML严格得多。



不推荐使用的语法（不记录）



嵌入代码与外部文件
最好是采用使用外部文件来包含JavaScript代码，因为以下优点：
可维护性。
可缓存：如果两个页面都使用同一个文件，那么这个文件只需下载一次。因此，最终结果就是能够加快页面加载的速度。
适应未来：HTML和XHTML包含外部文件的语法是相同的。



文档模式（doctype相关内容，暂不记录。）



<noscript>元素
该元素可以包含能够出现在文档<body>中的任何HTML元素，<script>元素除外。包含<noscript>元素中的内容只有在下列情况中才会显示出来：
·浏览器不支持脚本
·浏览器支持脚本，但脚本被禁用。
符合上述任何一个条件，浏览器都会显示<noscript>中的内容。而在除此之外的其他情况下，浏览器不会呈现<noscript>中的内容。






